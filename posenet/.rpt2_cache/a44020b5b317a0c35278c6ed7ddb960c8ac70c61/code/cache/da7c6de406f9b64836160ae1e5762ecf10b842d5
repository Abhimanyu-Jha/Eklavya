{"code":"function half(k) {\r\n    return Math.floor(k / 2);\r\n}\r\nvar MaxHeap = (function () {\r\n    function MaxHeap(maxSize, getElementValue) {\r\n        this.priorityQueue = new Array(maxSize);\r\n        this.numberOfElements = -1;\r\n        this.getElementValue = getElementValue;\r\n    }\r\n    MaxHeap.prototype.enqueue = function (x) {\r\n        this.priorityQueue[++this.numberOfElements] = x;\r\n        this.swim(this.numberOfElements);\r\n    };\r\n    MaxHeap.prototype.dequeue = function () {\r\n        var max = this.priorityQueue[0];\r\n        this.exchange(0, this.numberOfElements--);\r\n        this.sink(0);\r\n        this.priorityQueue[this.numberOfElements + 1] = null;\r\n        return max;\r\n    };\r\n    MaxHeap.prototype.empty = function () {\r\n        return this.numberOfElements === -1;\r\n    };\r\n    MaxHeap.prototype.size = function () {\r\n        return this.numberOfElements + 1;\r\n    };\r\n    MaxHeap.prototype.all = function () {\r\n        return this.priorityQueue.slice(0, this.numberOfElements + 1);\r\n    };\r\n    MaxHeap.prototype.max = function () {\r\n        return this.priorityQueue[0];\r\n    };\r\n    MaxHeap.prototype.swim = function (k) {\r\n        while (k > 0 && this.less(half(k), k)) {\r\n            this.exchange(k, half(k));\r\n            k = half(k);\r\n        }\r\n    };\r\n    MaxHeap.prototype.sink = function (k) {\r\n        while (2 * k <= this.numberOfElements) {\r\n            var j = 2 * k;\r\n            if (j < this.numberOfElements && this.less(j, j + 1)) {\r\n                j++;\r\n            }\r\n            if (!this.less(k, j)) {\r\n                break;\r\n            }\r\n            this.exchange(k, j);\r\n            k = j;\r\n        }\r\n    };\r\n    MaxHeap.prototype.getValueAt = function (i) {\r\n        return this.getElementValue(this.priorityQueue[i]);\r\n    };\r\n    MaxHeap.prototype.less = function (i, j) {\r\n        return this.getValueAt(i) < this.getValueAt(j);\r\n    };\r\n    MaxHeap.prototype.exchange = function (i, j) {\r\n        var t = this.priorityQueue[i];\r\n        this.priorityQueue[i] = this.priorityQueue[j];\r\n        this.priorityQueue[j] = t;\r\n    };\r\n    return MaxHeap;\r\n}());\r\nexport { MaxHeap };\r\n//# sourceMappingURL=max_heap.js.map","map":"{\"version\":3,\"file\":\"max_heap.js\",\"sourceRoot\":\"\",\"sources\":[\"../src/multi_pose/max_heap.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/home/abhimanyu/Eklavya/posenet/multi_pose/max_heap.d.ts","text":"export declare class MaxHeap<T> {\r\n    private priorityQueue;\r\n    private numberOfElements;\r\n    private getElementValue;\r\n    constructor(maxSize: number, getElementValue: (element: T) => number);\r\n    enqueue(x: T): void;\r\n    dequeue(): T;\r\n    empty(): boolean;\r\n    size(): number;\r\n    all(): T[];\r\n    max(): T;\r\n    private swim;\r\n    private sink;\r\n    private getValueAt;\r\n    private less;\r\n    private exchange;\r\n}\r\n"}}
