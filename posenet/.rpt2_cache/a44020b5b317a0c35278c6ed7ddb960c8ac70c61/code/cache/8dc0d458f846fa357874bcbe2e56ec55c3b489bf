{"code":"import { partIds, partNames, poseChain } from '../keypoints';\r\nimport { clamp, getOffsetPoint } from './util';\r\nimport { addVectors, getImageCoords } from './util';\r\nvar parentChildrenTuples = poseChain.map(function (_a) {\r\n    var parentJoinName = _a[0], childJoinName = _a[1];\r\n    return ([partIds[parentJoinName], partIds[childJoinName]]);\r\n});\r\nvar parentToChildEdges = parentChildrenTuples.map(function (_a) {\r\n    var childJointId = _a[1];\r\n    return childJointId;\r\n});\r\nvar childToParentEdges = parentChildrenTuples.map(function (_a) {\r\n    var parentJointId = _a[0];\r\n    return parentJointId;\r\n});\r\nfunction getDisplacement(edgeId, point, displacements) {\r\n    var numEdges = displacements.shape[2] / 2;\r\n    return {\r\n        y: displacements.get(point.y, point.x, edgeId),\r\n        x: displacements.get(point.y, point.x, numEdges + edgeId)\r\n    };\r\n}\r\nfunction getStridedIndexNearPoint(point, outputStride, height, width) {\r\n    return {\r\n        y: clamp(Math.round(point.y / outputStride), 0, height - 1),\r\n        x: clamp(Math.round(point.x / outputStride), 0, width - 1)\r\n    };\r\n}\r\nfunction traverseToTargetKeypoint(edgeId, sourceKeypoint, targetKeypointId, scoresBuffer, offsets, outputStride, displacements) {\r\n    var _a = scoresBuffer.shape, height = _a[0], width = _a[1];\r\n    var sourceKeypointIndices = getStridedIndexNearPoint(sourceKeypoint.position, outputStride, height, width);\r\n    var displacement = getDisplacement(edgeId, sourceKeypointIndices, displacements);\r\n    var displacedPoint = addVectors(sourceKeypoint.position, displacement);\r\n    var displacedPointIndices = getStridedIndexNearPoint(displacedPoint, outputStride, height, width);\r\n    var offsetPoint = getOffsetPoint(displacedPointIndices.y, displacedPointIndices.x, targetKeypointId, offsets);\r\n    var score = scoresBuffer.get(displacedPointIndices.y, displacedPointIndices.x, targetKeypointId);\r\n    var targetKeypoint = addVectors({\r\n        x: displacedPointIndices.x * outputStride,\r\n        y: displacedPointIndices.y * outputStride\r\n    }, { x: offsetPoint.x, y: offsetPoint.y });\r\n    return { position: targetKeypoint, part: partNames[targetKeypointId], score: score };\r\n}\r\nexport function decodePose(root, scores, offsets, outputStride, displacementsFwd, displacementsBwd) {\r\n    var numParts = scores.shape[2];\r\n    var numEdges = parentToChildEdges.length;\r\n    var instanceKeypoints = new Array(numParts);\r\n    var rootPart = root.part, rootScore = root.score;\r\n    var rootPoint = getImageCoords(rootPart, outputStride, offsets);\r\n    instanceKeypoints[rootPart.id] = {\r\n        score: rootScore,\r\n        part: partNames[rootPart.id],\r\n        position: rootPoint\r\n    };\r\n    for (var edge = numEdges - 1; edge >= 0; --edge) {\r\n        var sourceKeypointId = parentToChildEdges[edge];\r\n        var targetKeypointId = childToParentEdges[edge];\r\n        if (instanceKeypoints[sourceKeypointId] &&\r\n            !instanceKeypoints[targetKeypointId]) {\r\n            instanceKeypoints[targetKeypointId] = traverseToTargetKeypoint(edge, instanceKeypoints[sourceKeypointId], targetKeypointId, scores, offsets, outputStride, displacementsBwd);\r\n        }\r\n    }\r\n    for (var edge = 0; edge < numEdges; ++edge) {\r\n        var sourceKeypointId = childToParentEdges[edge];\r\n        var targetKeypointId = parentToChildEdges[edge];\r\n        if (instanceKeypoints[sourceKeypointId] &&\r\n            !instanceKeypoints[targetKeypointId]) {\r\n            instanceKeypoints[targetKeypointId] = traverseToTargetKeypoint(edge, instanceKeypoints[sourceKeypointId], targetKeypointId, scores, offsets, outputStride, displacementsFwd);\r\n        }\r\n    }\r\n    return instanceKeypoints;\r\n}\r\n//# sourceMappingURL=decode_pose.js.map","map":"{\"version\":3,\"file\":\"decode_pose.js\",\"sourceRoot\":\"\",\"sources\":[\"../src/multi_pose/decode_pose.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/home/abhimanyu/Eklavya/posenet/multi_pose/decode_pose.d.ts","text":"import { Keypoint, PartWithScore, TensorBuffer3D } from '../types';\r\nexport declare function decodePose(root: PartWithScore, scores: TensorBuffer3D, offsets: TensorBuffer3D, outputStride: number, displacementsFwd: TensorBuffer3D, displacementsBwd: TensorBuffer3D): Keypoint[];\r\n"}}
