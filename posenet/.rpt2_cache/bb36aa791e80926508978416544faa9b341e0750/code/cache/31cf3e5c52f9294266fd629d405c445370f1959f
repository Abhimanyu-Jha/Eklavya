{"code":"import * as tf from '@tensorflow/tfjs';\r\nfunction mod(a, b) {\r\n    return tf.tidy(function () {\r\n        var floored = a.div(tf.scalar(b, 'int32'));\r\n        return a.sub(floored.mul(tf.scalar(b, 'int32')));\r\n    });\r\n}\r\nexport function argmax2d(inputs) {\r\n    var _a = inputs.shape, height = _a[0], width = _a[1], depth = _a[2];\r\n    return tf.tidy(function () {\r\n        var reshaped = inputs.reshape([height * width, depth]);\r\n        var coords = reshaped.argMax(0);\r\n        var yCoords = coords.div(tf.scalar(width, 'int32')).expandDims(1);\r\n        var xCoords = mod(coords, width).expandDims(1);\r\n        return tf.concat([yCoords, xCoords], 1);\r\n    });\r\n}\r\n//# sourceMappingURL=argmax2d.js.map","map":"{\"version\":3,\"file\":\"argmax2d.js\",\"sourceRoot\":\"\",\"sources\":[\"../src/single_pose/argmax2d.ts\"],\"names\":[],\"mappings\":\"AAiBA,OAAO,KAAK,EAAE,MAAM,kBAAkB,CAAC;AAEvC,aAAa,CAAc,EAAE,CAAS;IACpC,OAAO,EAAE,CAAC,IAAI,CAAC;QACb,IAAM,OAAO,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC;QAE7C,OAAO,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC;IACnD,CAAC,CAAC,CAAC;AACL,CAAC;AAED,MAAM,mBAAmB,MAAmB;IACpC,IAAA,iBAAqC,EAApC,cAAM,EAAE,aAAK,EAAE,aAAK,CAAiB;IAE5C,OAAO,EAAE,CAAC,IAAI,CAAC;QACb,IAAM,QAAQ,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC,MAAM,GAAG,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC;QACzD,IAAM,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAgB,CAAC;QAEjD,IAAM,OAAO,GACT,MAAM,CAAC,GAAG,CAAC,EAAE,CAAC,MAAM,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAgB,CAAC;QACvE,IAAM,OAAO,GAAG,GAAG,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC,UAAU,CAAC,CAAC,CAAgB,CAAC;QAEhE,OAAO,EAAE,CAAC,MAAM,CAAC,CAAC,OAAO,EAAE,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC;IAC1C,CAAC,CAAC,CAAC;AACL,CAAC\"}","dts":{"name":"/home/abhimanyu/Eklavya/posenet/single_pose/argmax2d.d.ts","text":"import * as tf from '@tensorflow/tfjs';\r\nexport declare function argmax2d(inputs: tf.Tensor3D): tf.Tensor2D;\r\n"}}
